#!/usr/bin/env sh

if ! git rev-parse --git-dir >/dev/null; then
	exit 1
fi

while getopts t:r: flag; do
	case "${flag}" in
	r) REMOTE="${OPTARG}" ;;
	t) merge_target="${OPTARG}" ;;
	*) exit 1 ;;
	esac
done

# clear screen for interactive use
test -t 1 && clear -x

# shellcheck source=libstatus.sh
. ~/projects/libstatus/libstatus.sh

init

# columnize <(print_tree_status) <(print_worktree_list)

# columnize <(print_tree_status; echo; print_current_and_upstream) <(print_worktree_list; echo; print_behind_master)
left="$(mktemp)"
right="$(mktemp)"
{
	print_tree_status
	print_current_and_upstream
} >"${left}"
{
	print_worktree_list
	print_current_and_target "${merge_target}"
} >"${right}"

columnize "${left}" "${right}"

if are_there_submodules; then
	print_submodule_status >"${left}"
	print_submodule_summary >"${right}"
	columnize "${left}" "${right}"
fi

rm "${left}" "${right}"

print_stash

print_untracked_hint
print_intent_to_add_hint
print_mistracking_hint
print_rebase_lost_merges_hint
